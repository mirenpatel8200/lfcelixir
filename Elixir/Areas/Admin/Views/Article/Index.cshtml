@using Elixir.Helpers
@using Elixir.Models.Enums
@using Elixir.Models
@model Elixir.Areas.Admin.ViewModels.ArticlesViewModel

@{
    ViewBag.Title = "Articles";
    string currentFilter = Request.QueryString["Filter"];
    string currentSortBy = Request.QueryString["sortBy"];
    string currentDirection = Request.QueryString["direction"];
    string currentIncludeAllFields = Request.QueryString["includeAllFields"];
    int currentTopicFilter= Convert.ToInt32( Request.QueryString["TopicFilter"]);
    var Topics =ViewBag.topics!=null ?(List<Topic>)ViewBag.topics:new List<Topic>();
}

@section Styles
{
    @Styles.Render("~/Styles/Components/datagrid.css")
}

@section Scripts
{
    @Scripts.Render("~/Scripts/App/tooltip.js")
}

<h1 class="head-title">Articles</h1>

<div class="row">

    @using (Html.BeginForm("Index", "Article", FormMethod.Get))
    {
        <div class="row">
            <div class="col-2">
                @Html.ActionLink("New", "Create", "Article", null, new { @class = "btn btn-primary" })
            </div>

            <div class="col-10 input-group ">
                <input type="hidden" name="sortBy" value="@((int)Model.CurrentSortOrder)" />
                <input type="hidden" name="direction" value="@((int)Model.CurrentSortDirection)" />

                <input type="text" class="form-control " name="filter" value="@currentFilter" aria-describedby="basic-addon2">
                <select class="form-control " name="TopicFilter">
                    <option value="0">All</option>
                    @if (Topics != null && Topics.Any())
                    {
                        foreach (var topic in Topics)
                        {
                            if (currentTopicFilter == topic.Id)
                            {
                                <option value="@topic.Id" selected>@topic.TopicName</option>
                            }
                            else
                            {
                                <option value="@topic.Id">@topic.TopicName</option>
                            }

                        }
                    }
                </select>
                <div class="input-group-append">
                    <input type="submit" class="btn btn-outline-secondary" value="Filter" />
                    <a href="@Url.Action("Index", "Article" ,
                   new { sortBy = @currentSortBy, direction = @currentDirection })"
                       class="btn btn-outline-secondary">Clear</a>
                </div>
                <div class="m-auto pl-5">
                    @if (!string.IsNullOrEmpty(currentIncludeAllFields) && currentIncludeAllFields == "on")
                    {
                        <input type="checkbox" class="" name="includeAllFields" id="includeAllFields" checked/> <span>&nbsp; All Fields</span>
                    }
                    else
                    {
                        <input type="checkbox" class="" name="includeAllFields" id="includeAllFields" /> <span>&nbsp; All Fields</span>
                    }
                </div>
                
            </div>
        </div>
    }
</div>

<div class="row table-wrapper">
    <div class="col-12">
        <table class="table table-bordered data-grid">
            <thead>
                <tr >
                    <th class="small">
                        <span class="table-header-text">ID</span>
                        <a href="@Url.Action("Index", new { sortBy=(int)ArticlesSortField.ArticleID, direction=(int)Model.SortDirection, filter = currentFilter })" class="sort-action">
                            <i class="fa fa-sort action-sort"></i>
                        </a>
                    </th>
                    <th style="width: 50% !important">
                        <span class="table-header-text">Title</span>
                        <a href="@Url.Action("Index", new { sortBy=(int)ArticlesSortField.ArticleTitle, direction=(int)Model.SortDirection, filter = currentFilter })" class="sort-action">
                            <i class="fa fa-sort action-sort"></i>
                        </a>
                    </th>
                    <th>
                        <span class="table-header-text">Publisher Name</span>
                        <a href="@Url.Action("Index", new { sortBy=(int)ArticlesSortField.DnPublisherName, direction=(int)Model.SortDirection, filter = currentFilter })" class="sort-action">
                            <i class="fa fa-sort action-sort"></i>
                        </a>
                    </th>
                    <th class="medium" id="article-date">
                        <span class="table-header-text">Article Date</span>
                        <a href="@Url.Action("Index", new { sortBy=(int)ArticlesSortField.ArticleDate, direction=(int)Model.SortDirection, filter = currentFilter })" class="sort-action">
                            <i class="fa fa-sort action-sort"></i>
                        </a>
                    </th>
                    <th>
                        <span class="table-header-text">Primary Topic</span>
                        <a href="@Url.Action("Index", new { sortBy=(int)ArticlesSortField.PrimaryTopic, direction=(int)Model.SortDirection, filter = currentFilter })" class="sort-action">
                            <i class="fa fa-sort action-sort"></i>
                        </a>
                    </th>
                    <th class="medium">
                        <span class="table-header-text">Enabled</span>
                        <a href="@Url.Action("Index", new { sortBy=(int)ArticlesSortField.IsEnabled, direction=(int)Model.SortDirection, filter = currentFilter })" class="sort-action">
                            <i class="fa fa-sort action-sort"></i>
                        </a>
                    </th>
                    <th class="small">
                        <span class="table-header-text">Notes</span>
                    </th>
                    <th class="small">
                        <span class="table-header-text">Updated</span>
                    </th>
                    <th class="small">
                        <span class="table-header-text">Updated By</span>
                    </th>
                    <th class="small">
                        <span class="table-header-text">Actions</span>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var articleModel in Model.Models)
                {
                    <tr>
                        <td class="small">
                            @articleModel.Id
                            @*@Html.ActionLink("{Social}", "CreatePost", "Social", new { entityType = EntityType.Article, entityId = articleModel.Id }, null)*@
                        </td>
                        <td >
                            @Html.ActionLink(articleModel.Title, "Edit", new { id = articleModel.Id })
                        </td>
                        <td>
                            @{
                                string dnPublisherName = "N/A";
                                if (!string.IsNullOrEmpty(articleModel.DnPublisherName))
                                {
                                    dnPublisherName = articleModel.DnPublisherName;
                                }
                            }
                            @dnPublisherName
                        </td>
                        <td class="medium">@articleModel.ArticleDate.FormatDdMmYyyy()</td>
                        <td>@articleModel.PrimaryTopic.TopicName</td>
                        <td class="medium">@Html.CheckBox("is-included", @articleModel.IsEnabled, new { disabled = "disabled" })</td>
                        <td class="small">
                            @if (string.IsNullOrWhiteSpace(articleModel.Notes) == false)
                            {
                                <span class="notes-holder" data-toggle="tooltip" data-placement="top" title="@articleModel.Notes">
                                    <i class="fa fa-info-circle"></i>
                                </span>
                            }
                        </td>

                        <td class="small">@articleModel.Updated.Value.ToString("dd-MM-yyyy")</td>
                        <td class="small">@articleModel.LastUpdatedBy</td>
                        <td class="">
                            <a href="@Url.Action("Index", "PublicArticle" , new { area = "" , name = articleModel.UrlName })" target="_blank">
                                <i class="fas fa-eye"></i>
                            </a>
                            <a href="@articleModel.PublisherUrl" target="_blank">
                                <i class="fas fa-globe"></i>
                            </a>
                            <a href="@Url.Action("CreatePost", "Social", new { area = "Admin", entityType = EntityType.Article, entityId = articleModel.Id })">
                                <i class="fas fa-share-square"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

