@model Elixir.ViewModels.Base.BaseCUWithSelectViewModel<Elixir.Areas.Admin.Models.BookUserModel>
@{
    ViewBag.Title = "Edit User";
}

@section Scripts
{
    @Scripts.Render("~/Scripts/App/confirmation.js")
}

<h1 class="head-title">Edit User</h1>

@using (Html.BeginForm("Edit", "User", FormMethod.Post))
{
    @Html.Partial("_UserEditor", Model)

    <br />
    <br />

    <div class="form-group row">

        @Html.LabelFor(x => x.Model.LastLogin.Value, "Last Login", new { @class = "col-form-label col-2" })
        @Html.HiddenFor(x => x.Model.LastLogin)

        @if (Model.Model.LastLogin.HasValue)
        {
            <div class="col-2">
                <input type="text" value="@Model.Model.LastLogin.Value.ToString("dd-MM-yyyy")" readonly="readonly" class="form-control text-box single-line valid" />
            </div>
        }
        else
        {
            <div class="col-2">
                <input type="text" value="N/A" readonly="readonly" class="form-control text-box single-line valid" />
            </div>
        }
    </div>

    <br />
    <br />

    <div class="form-group row">
        <div class="offset-2 col-2">
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-light" })
        </div>
        <div class="col-2">
            @Html.ActionLink("Delete", "Delete", new { id = Model.Model.Id }, new { @class = "btn btn-danger confirmable-action" })
        </div>
        <div class="col-2">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
}

