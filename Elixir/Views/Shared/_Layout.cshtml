@using System.Reflection
@using Elixir.Models
@using Elixir.Models.Utils
@using Elixir.ViewModels
@using Elixir.ViewModels.Enums
@using Elixir.Views
@using System.Web.Configuration;
@{
    // Layout initializers.
    var authedUser = ViewData.GetValue<BookUser>(ViewDataKeys.AuthenticatedUser);

    var bannerImageUrl = ViewData.GetValue<string>(ViewDataKeys.BannerImagePath);
    var ogImageName = ViewData.GetValue<string>(ViewDataKeys.OgImageName);

    var metaDescription = ViewData.GetValue<string>(ViewDataKeys.MetaDescription);

    var bannerMeta = ViewData.GetValue<BannerImageMetaVm>(ViewDataKeys.BannerImageMeta);

    var enabledNavbarAds = ViewData.GetValue<HeadNavigationType>(ViewDataKeys.HeadNavigationType) != HeadNavigationType.AdminDashboard;

    var blogStructuredData = ViewData.GetValue<string>(ViewDataKeys.BlogPostScript);
    blogStructuredData = HttpUtility.HtmlDecode(blogStructuredData);

    var articleStructuredData = ViewData.GetValue<string>(ViewDataKeys.ArticleScript);
    articleStructuredData = HttpUtility.HtmlDecode(articleStructuredData);

    var productStructuredData = ViewData.GetValue<string>(ViewDataKeys.ProductScript);
    productStructuredData = HttpUtility.HtmlDecode(productStructuredData);

    var isVisibleNewFlashText = ViewData.GetValue<SettingsEntry>(ViewDataKeys.IsVisibleNewFlashText);
    SettingsEntry newFlashText = null;
    if (isVisibleNewFlashText != null && !string.IsNullOrEmpty(isVisibleNewFlashText.PairValue) && Convert.ToBoolean(isVisibleNewFlashText.PairValue))
    {
        newFlashText = ViewData.GetValue<SettingsEntry>(ViewDataKeys.NewFlashText);
    }
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    @*For paypal integration*@
    <!--<meta name="viewport" content="width=device-width, initial-scale=1">--> <!-- Ensures optimal rendering on mobile devices. -->
    <meta http-equiv="X-UA-Compatible" content="IE=edge" /> <!-- Optimal Internet Explorer compatibility -->

    @if (ViewData.GetValue<HeadNavigationType>(ViewDataKeys.HeadNavigationType) == HeadNavigationType.MemberView) // only include Google analytics & social media code on public pages - V2: omit for admin users
    {
        if (!CompilationUtils.IsProfilingMode)
        {
            if (Convert.ToBoolean(WebConfigurationManager.AppSettings["IsApplyGoogleAnalytics"].ToString()))
            {
                <!-- Global site tag (gtag.js) - Google Analytics -->
                <script async src="https://www.googletagmanager.com/gtag/js?id=UA-7756573-25"></script>
                <script>
                    window.dataLayer = window.dataLayer || [];

                    function gtag() { dataLayer.push(arguments); }

                    gtag('js', new Date());

                    gtag('config', 'UA-7756573-25');
                </script>
                <!--Tradedoubler site verification 3168544 -->
            }
            else
            {
                <!-- Google Analytics tracking code omitted -->
            }
        }

        //<meta property="og:url" content="https://liveforever.club/@ViewContext.RouteData.GetRequiredString("controller")/@ViewContext.RouteData.GetRequiredString("action")" />
        // this is returning "<meta property="og:url" content="https://liveforever.club/WebPageVisual/Index" />" - not very useful!
        <meta property="og:url" content="@Request.Url.AbsoluteUri" />
        <meta property="og:type" content="website" />
        <meta property="og:title" content="@ViewBag.Title" />
        <meta property="og:description" content="@metaDescription" />

        if (!string.IsNullOrWhiteSpace(ogImageName))
        {
            var protocolHostPort = Request.Url.GetLeftPart(UriPartial.Authority);

            <meta property="og:image" content="@protocolHostPort@ogImageName" />
        }

        <meta name="twitter:card" content="summary_large_image">
    }

    @if (!string.IsNullOrWhiteSpace(metaDescription))
    {
        <meta name="description" content="@metaDescription">
    }
    <title>@ViewBag.Title</title>

    @if (!string.IsNullOrEmpty(blogStructuredData))
    {
        <script type="application/ld+json">
            @Html.Raw(blogStructuredData)
        </script>
    }
    @if (!string.IsNullOrEmpty(articleStructuredData))
    {
        <script type="application/ld+json">
            @Html.Raw(articleStructuredData)
        </script>
    }
    @if (!string.IsNullOrEmpty(productStructuredData))
    {
        <script type="application/ld+json">
            @Html.Raw(productStructuredData)
        </script>
    }

    @Styles.Render("~/Styles/Libraries/bootstrap.min.css") @* from CDN v4.1.3 *@
    @Styles.Render("~/Styles/Libraries/jquery-ui.min.css") @* from CDN v1.12.1*@
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.11/summernote-bs4.css" rel="stylesheet">
    @*@Styles.Render("~/Styles/Libraries/fa/css/all.min.css")*@
    @Styles.Render("~/Styles/Libraries/animate.min.css")
    @Styles.Render("~/Styles/common.css")
    @Styles.Render("~/Styles/Layout/banner.css")
    @Styles.Render("~/Styles/Pages/main.css")
    @Styles.Render("~/Styles/Pages/booksections.css")
    @if (enabledNavbarAds)
    {
        @Styles.Render("~/Styles/Layout/NavbarAds.css")
    }

    @RenderSection("Styles", false)

    @if (!Convert.ToBoolean(WebConfigurationManager.AppSettings["IsLoadGoogleAds"].ToString()))
    {
        <style type="text/css">
            @@media only screen and (max-width: 1199px) {
                body .navbar-ads-wrapper #navbar-ads {
                    width: 320px !important;
                    min-height: 100px !important;
                    background-image: url(/Images/adverts/placeholders/320x100.png) !important;
                }

                .content-wrapper .content {
                    flex: unset;
                    padding: 15px;
                }
            }
        </style>
    }


    <!-- bootstrap -->
    @*@Styles.Render("~/pgs/css/bootstrap.min.css")*@
    @Styles.Render("~/pgs/css/font-awesome/all.min.css")
    @Styles.Render("~/pgs/css/style.css")
    @Styles.Render("~/pgs/css/stellarnav.css")
    <!-- google fonts  -->
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@300;400;500&family=PT+Sans:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">

</head>
<body class="@(enabledNavbarAds ? "navbar-ads-enabled": "navbar-ads-disabled")">
    <span id="spLoader"></span>
    <div class="navbar-ads-wrapper">
        @if (enabledNavbarAds) // i.e. not admin pages
        {
            if (!User.IsInRole(Elixir.Models.Enums.Roles.Longevist.ToString()))
            {
                if (Convert.ToBoolean(WebConfigurationManager.AppSettings["IsLoadGoogleAds"].ToString()))
                {
                    <div id="navbar-ads">
                        @if (!CompilationUtils.IsProfilingMode)
                        {
                            // 3rd Party Ad - Banner - Start
                            <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
                            <ins class="adsbygoogle"
                                 style="display: block; min-width:400px;max-width:970px;width:100%;height:90px"
                                 data-ad-client="ca-pub-1923796702115669"
                                 data-ad-slot="5498765774"
                                 data-ad-format="horizontal"
                                 data-full-width-responsive="true"></ins>
                            <script>
                                (adsbygoogle = window.adsbygoogle || []).push({});
                            </script>
                            // 3rd Party Ad - Banner - End
                        }
                        else
                        {
                            <div style="color: red; font-size: 30px; text-align: center">PROFILING MODE ENABLED</div>
                        }
                    </div>
                }
                else
                {
                    <div id="navbar-ads" style="width:728px; min-height: 90px; background-image: url(/Images/adverts/placeholders/728x90.png)"></div>
                    @*<div id="navbar-ads" style="width:728px; min-height: 90px;background-image: url(http://elixir.potenzaglobalsolutions.com/Images/adverts/placeholders/728x90.png)"></div>*@
                }
            }
            else
            {
                <!-- 3rd Party Ad - Banner omitted -->
            }
        }
    </div> @*ENDOF navbar-ads - wrapper bg - dark *@
    <header class="header header-transparent">
        <div class="">
            <nav class="navbar navbar-expand-xl navbar-light header-sticky @(ViewData.GetValue<bool>(ViewDataKeys.EnableImageBanner) == false ? "bg-dark" : "")">
                @if (ViewData.GetValue<HeadNavigationType>(ViewDataKeys.HeadNavigationType) == HeadNavigationType.AdminDashboard)
                {
                    <a class="navbar-brand" href="/" target="_blank">
                        <img id="elixir-logo" class="logo" src="@Url.Content("~/Content/Images/logo-only-65x34.png")" />
                    </a>
                }
                else if (ViewData.GetValue<HeadNavigationType>(ViewDataKeys.HeadNavigationType) == HeadNavigationType.MemberView)
                {
                    <a class="navbar-brand" href="@Url.Action("Index", "WebPageVisual", new { area = "", name = "home" })">
                        <img id="elixir-logo" class="logo" src="@Url.Content("~/Content/Images/logo-only-65x34.png")" />
                    </a>
                }
                <div class="stellarnav left-navbar">
                    <ul>
                        @if (!Request.IsAuthenticated || ViewData.GetValue<HeadNavigationType>(ViewDataKeys.HeadNavigationType) == HeadNavigationType.MemberView)
                        {
                            @Html.Action("RenderMainNavigationLinks", "WebPageVisual")
                        }
                        else if (ViewData.GetValue<HeadNavigationType>(ViewDataKeys.HeadNavigationType) == HeadNavigationType.AdminDashboard)
                        {
                            <li class="nav-item">@Html.ActionLink("Dashboard", "Index", "Dashboard", new { area = "Admin" }, new { @class = "nav-link" })</li>
                            <li class="nav-item">@Html.ActionLink("Articles", "Index", "Article", new { area = "Admin" }, new { @class = "nav-link" })</li>
                            <li class="nav-item">@Html.ActionLink("Blog", "Index", "Blog", new { area = "Admin" }, new { @class = "nav-link" })</li>
                            <li class="nav-item">@Html.ActionLink("Go Links", "Log", "GoLinkLog", new { area = "Admin" }, new { @class = "nav-link" })</li>
                            //Book
                            <li class="dropdown nav-item">
                                <a class="nav-link" href="javascript:void(0)" data-toggle="dropdown">Manual <i class="fas fa-chevron-down fa-xs"></i></a>
                                <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                                    <li>@Html.ActionLink("Manage", "Index", "ManageBook", new { area = "AdminManual" }, new { @class = "dropdown-item" })</li>
                                    <li>@Html.ActionLink("Content", "Index", "Content", new { area = "AdminManual" }, new { @class = "dropdown-item" })</li>
                                    <li>@Html.ActionLink("Chapters", "Index", "Chapter", new { area = "AdminManual" }, new { @class = "dropdown-item" })</li>
                                    <li>@Html.ActionLink("Sections", "Index", "Section", new { area = "AdminManual" }, new { @class = "dropdown-item" })</li>
                                    <li>@Html.ActionLink("Pages", "Index", "Page", new { area = "AdminManual" }, new { @class = "dropdown-item" })</li>
                                </ul>
                            </li>
                            <li class="nav-item">@Html.ActionLink("Resources", "Index", "Resource", new { area = "Admin" }, new { @class = "nav-link" })</li>
                            //Shop
                            <li class="dropdown nav-item">
                                <a class="nav-link" href="javascript:void(0)" data-toggle="dropdown">Shop <i class="fas fa-chevron-down fa-xs"></i></a>
                                <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                                    <li>
                                        @Html.ActionLink("Dashboard", "Index", "Shop", new { area = "Admin" }, new { @class = "dropdown-item" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Products", "Product", "Shop", new { area = "Admin" }, new { @class = "dropdown-item" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Categories", "Category", "Shop", new { area = "Admin" }, new { @class = "dropdown-item" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Orders", "Orders", "Shop", new { area = "Admin" }, new { @class = "dropdown-item" })
                                    </li>
                                </ul>
                            </li>
                            <li class="nav-item">@Html.ActionLink("Social", "Dashboard", "Social", new { area = "Admin" }, new { @class = "nav-link" })</li>
                            <li class="nav-item">@Html.ActionLink("Topics", "Index", "Topic", new { area = "Admin" }, new { @class = "nav-link" })</li>
                            <li class="nav-item">@Html.ActionLink("Users", "Index", "User", new { area = "Admin" }, new { @class = "nav-link" })</li>

                            //Web Site
                            <li class="dropdown nav-item">
                                <a class="nav-link" href="javascript:void(0)" data-toggle="dropdown">Web Site <i class="fas fa-chevron-down fa-xs"></i></a>
                                <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                                    <li>
                                        @Html.ActionLink("Web Pages", "Index", "WebPage", new { area = "Admin" }, new { @class = "dropdown-item" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Manage", "Index", "WebSite", new { area = "Admin" }, new { @class = "dropdown-item" })
                                    </li>
                                </ul>
                            </li>

                            @*<li class="nav-item mr-auto">@Html.ActionLink("Web Site", "Index", "WebSite", new { area = "Admin" }, new { @class = "nav-link" })</li>*@
                        }
                    </ul>
                </div>
                <div class="d-flex mr-xl-auto align-items-center">
                    <div class="search">
                        <a href="@Url.Action("Index", "Search")"><i class="fas fa-search"></i></a>
                    </div>
                    <div class="login-btn">
                        @if (Request.IsAuthenticated)
                        {
                            string info = $"{authedUser.UserName} {authedUser.UserNameLast}";
                            <a class="btn btn-white" href="@Url.Action("Logout", "Auth", new {area = ""})">@info <i class="fa fa-sign-out" aria-hidden="true"></i></a>
                        }
                        else
                        {
                            <a class="btn btn-white" href="@Url.Action("Login", "Page", new {area = ""})">Login</a>
                        }
                    </div>
                </div>
            </nav>
        </div>
    </header>

    @if (ViewData.GetValue<bool>(ViewDataKeys.EnableImageBanner))
    {
        @*<div class="container">
                <div class="banner">
                    <img src="@Url.Content(bannerImageUrl)" @(Html.Raw(bannerMeta != null ? $"alt=\"{bannerMeta.AltText}\" title=\"{bannerMeta.ImgTitle}\"" : "")) />
                </div>
            </div>*@

        @* old banner layout
            if (ViewBag.ArticleTitle == null)
            {
                <section class="banner banner-overley">
                    <div class="container-fluid p-0">
                        <div class="row no-gutters">
                            <div class="col-sm-12">
                                <div class="banner-img">
                                    <img class="img-fluid" src="@Url.Content(bannerImageUrl)" @(Html.Raw(bannerMeta != null ? $"alt=\"{bannerMeta.AltText}\" title=\"{bannerMeta.ImgTitle}\"" : "")) />
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            }
            else
            { *@
        <section class="inner-banner banner-overley" style="background-image: url( @Url.Content(bannerImageUrl) );background-repeat: no-repeat;background-size: cover;background-position: center center;">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="banner-content text-center">
                            <h1 class="inner-titles">@ViewBag.Title</h1> @*Title used for all types of pages - subject, blog posts, resources, shop product, etc*@
                        </div>
                    </div>
                </div>
            </div>
        </section>
        @* } *@
    }



    @if (isVisibleNewFlashText != null && Convert.ToBoolean(isVisibleNewFlashText.PairValue))
    {
        if (newFlashText != null && !string.IsNullOrEmpty(newFlashText.PairValue))
        {
            <div class="container">
                <p>@Html.Raw(newFlashText.PairValue)</p>
            </div>
        }
    }


    <div class="container body-content">
        @RenderBody()
    </div>
    <footer class="footer">
        <div class="footer-top">
            <div class="container">
                <div class="row">
                    <div class="col-sm-12 text-center">
                        @if (Request.RequestContext.RouteData.DataTokens["area"] != null && (Request.RequestContext.RouteData.DataTokens["area"].ToString() == "Admin" || Request.RequestContext.RouteData.DataTokens["area"].ToString() == "AdminManual"))
                        {
                            @*<div class="col-12 disclaimer">
                                    COMMERCIALLY CONFIDENTIAL. Do not share any content (including screenshots) outside of the Live Forever Club team.
                                </div>*@
                            <div class="col-sm-12 text-center">
                                <p class="mb-0">
                                    COMMERCIALLY CONFIDENTIAL. Do not share any content (including screenshots) outside of the Live Forever Club team.
                                </p>
                            </div>
                        }
                        else
                        {
                            <div class="col-sm-12 text-center">
                                <p class="mb-0">
                                    Affiliate disclosure: Any links above marked with an asterisk (*) means it is an affiliated link which sometimes results in a payment or benefit to the club. Affiliate relationships NEVER impact the editorial content of the website - links are only ever added to products/companies that would have been mentioned or recommended anyway. liveforever.club is a participant in the Amazon Services LLC Associates Program. Affiliate links help to keep the website free to use.
                                    DISCLAIMER: All content provided on this website is for informational purposes only. The owner of this blog makes no representations as to the accuracy or completeness of any information on this site or found by following any link on this site. No information is intended as a substitute for a doctor-patient relationship nor does it constitute medical advice of any kind.
                                </p>
                            </div>
                            @*<div class="col-12 disclaimer">
                                    Affiliate disclosure: Any links above marked with an asterisk (*) means it is an affiliated link which sometimes results in a payment or benefit to the club.
                                    Affiliate relationships NEVER impact the editorial content of the website - links are only ever added to products/companies that would have been mentioned or recommended anyway.
                                    liveforever.club is a participant in the Amazon Services LLC Associates Program.
                                    Affiliate links help to keep the website free to use.
                                    <br />
                                    DISCLAIMER: All content provided on this website is for informational purposes only.
                                    The owner of this blog makes no representations as to the accuracy or completeness of any information on this site or found by following any link on this site.
                                    No information is intended as a substitute for a doctor-patient relationship nor does it constitute medical advice of any kind.
                                </div>*@
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="footer-bottom">
            <div class="container">
                <div class="row">
                    <div class="col-sm-12 d-md-flex justify-content-center text-center">
                        <p class="mb-0">©Copyright Live Forever Club CIC. All rights reserved.</p>
                        <ul class="footer-menu">
                            <li>@(Html.ActionLink("About", "Index", "WebPageVisual", new { name = "about", area = "" }, null))</li>
                            <li>@(Html.ActionLink("Privacy", "Index", "WebPageVisual", new { name = "privacypolicy", area = "" }, null))</li>
                            <li>@(Html.ActionLink("Terms", "Index", "WebPageVisual", new { name = "webterms", area = "" }, null))</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>







        @*<div class="row">
            <div class="col-12 copyright">
                Copyright Live Forever Club CIC. All rights reserved. - @(Html.ActionLink("About", "Index", "WebPageVisual", new { name = "about", area = "" }, null)) - @(Html.ActionLink("Privacy", "Index", "WebPageVisual", new { name = "privacypolicy", area = "" }, null)) - @(Html.ActionLink("Terms", "Index", "WebPageVisual", new { name = "webterms", area = "" }, null)) <br />*@

        @*<code>@(typeof(Elixir.MvcApplication).Assembly.GetCustomAttributes(typeof(AssemblyTrademarkAttribute), true).Cast<AssemblyTrademarkAttribute>().FirstOrDefault()?.Trademark)</code>*@
        <!-- commit tag = @(typeof(Elixir.MvcApplication).Assembly.GetCustomAttributes(typeof(AssemblyTrademarkAttribute), true).Cast<AssemblyTrademarkAttribute>().FirstOrDefault()?.Trademark) -->
        @*</div>
            </div>*@
    </footer>
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"
            integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>

    @Scripts.Render("~/Scripts/jquery-ui.min.js")
    @Scripts.Render(
        "~/Scripts/jquery.validate.min.js",
        "~/Scripts/rxjs.min.js",
        "~/Scripts/bootstrap-notify.min.js",
        "~/Scripts/App/Core/notify-msg.js")

    @Scripts.Render("~/Scripts/App/datepicker.js")
    @Scripts.Render("~/Scripts/App/common.js")

    <!-- jquery -->
    @*@Scripts.Render("~/pgs/js/jquery-3.5.1.min.js")*@
    @Scripts.Render("~/pgs/js/bootstrap.min.js")
    @Scripts.Render("~/pgs/js/stellarnav.min.js")

    <script type="text/javascript">
        jQuery(document).ready(function ($) {
            jQuery('.stellarnav').stellarNav({
                theme: 'dark',
                breakpoint: 1199,
                position: 'right',
            });
            jQuery(".menu-toggle").click(function () {
                jQuery(".navbar").addClass("menu-toggle");
            });
            jQuery(".close-menu ").click(function () {
                jQuery(".navbar").removeClass("menu-toggle");
            });

        });

        $(window).scroll(function () {
            if ($(this).scrollTop() > 150) {
                $('.header-sticky').addClass('is-sticky');
            } else {
                $('.header-sticky').removeClass('is-sticky');
            }


        });

        $(".resource-list").mouseover(function () {
            $('#' + $(this).data('id')).show();
        });
        $(".resource-list").mouseout(function () {
            $(".arrow_box").hide();
        });

    </script>
    @*@if (enabledNavbarAds)
        {
            @Scripts.Render("~/Scripts/App/navbar-ads.js")
        }*@
    @RenderSection("Scripts", required: false)

    @if (ViewData.GetValue<HeadNavigationType>(ViewDataKeys.HeadNavigationType) == HeadNavigationType.MemberView) // only include Google analytics & social media code on public pages - V2: omit for admin users
    {
        if (!CompilationUtils.IsProfilingMode)
        {
            <!-- Load Facebook SDK for JavaScript -->
            <div id="fb-root"></div>
            <script>
                (function (d, s, id) {
                    var js, fjs = d.getElementsByTagName(s)[0];
                    if (d.getElementById(id)) return;
                    js = d.createElement(s);
                    js.id = id;
                    js.src = "https://connect.facebook.net/en_US/sdk.js#xfbml=1&version=v3.0";
                    fjs.parentNode.insertBefore(js, fjs);
                }(document, 'script', 'facebook-jssdk'));
            </script>
            <!-- Amazon Associates OneLink script (converts link to users country site) -->
            <div id="amzn-assoc-ad-aa354050-fa20-40e4-bb76-83342d13554d"></div>
            <script async src="//z-na.amazon-adsystem.com/widgets/onejs?MarketPlace=US&adInstanceId=aa354050-fa20-40e4-bb76-83342d13554d"></script>
        }
    }
</body>
</html>
